{"title":"JS core简介","uid":"65021a59a0d5eb977481013298cc8b80","slug":"JS core简介","date":"2022-05-05T11:31:52.948Z","updated":"2022-05-05T11:46:55.076Z","comments":true,"path":"api/articles/JS core简介.json","keywords":null,"cover":"https://media.istockphoto.com/photos/dog-dreaming-picture-id1323095288?k=20&m=1323095288&s=612x612&w=0&h=ZC2DNmAcpDlMlNof1ojUXpItMhXggVfXFqnIZHU3NX4=","content":"<h1 id=\"JS-core\"><a href=\"#JS-core\" class=\"headerlink\" title=\"JS core\"></a>JS core</h1><h2 id=\"GC机制：Tracing-Garbage-Collection\"><a href=\"#GC机制：Tracing-Garbage-Collection\" class=\"headerlink\" title=\"GC机制：Tracing Garbage Collection\"></a>GC机制：Tracing Garbage Collection</h2><p>从GCRoot维护的一条引用链，会清除引用链无法触达的地方</p>\n<h2 id=\"JS-Context\"><a href=\"#JS-Context\" class=\"headerlink\" title=\"JS Context\"></a>JS Context</h2><p>熟悉js的人应该都知道，jsContext就是js执行的上下文环境，其中比较重要的一点就是全局的WIndow对象</p>\n<h2 id=\"JSVirtualMachine（JSVM）\"><a href=\"#JSVirtualMachine（JSVM）\" class=\"headerlink\" title=\"JSVirtualMachine（JSVM）\"></a>JSVirtualMachine（JSVM）</h2><p>JSVM是一个抽象的虚拟机。不同JSVM执行不同的任务，每个JSContext都从属于一个JSVM，每个JSVM都有自己独立的堆空间，GC也只能处理JSVM内部的对象，不同的JSVM之间无法进行传值。JSVM和JS Context之间的关系如下：</p>\n<p><img src=\"JS%20core%20f138c773fc784ae3973abeaa68fe0a57/Untitled.png\" alt=\"Untitled\"></p>\n<h2 id=\"JSExport\"><a href=\"#JSExport\" class=\"headerlink\" title=\"JSExport\"></a><strong><strong>JSExport</strong></strong></h2><p>实现JSExport协议可以开放OC类和它们的实例方法，类方法，以及属性给JS调用</p>\n<h2 id=\"JSValue\"><a href=\"#JSValue\" class=\"headerlink\" title=\"JSValue\"></a>JSValue</h2><p>JSValue实例是一个指向JS值的引用指针。我们可以使用JSValue类，在OC和JS的基础数据类型之间相互转换。同时我们也可以使用这个类，去创建包装了Native自定义类的JS对象，或者是那些由Native方法或者Block提供实现JS方法的JS对象<strong>。</strong></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>JSCore给iOS App提供了JS可以解释执行的运行环境与资源。对于我们实际开发而言，最主要的就是JSContext和JSValue这两个类。JSContext提供互相调用的接口，JSValue为这个互相调用提供数据类型的桥接转换。让JS可以执行Native方法，并让Native回调JS，反之亦然。</p>\n<p><img src=\"JS%20core%20f138c773fc784ae3973abeaa68fe0a57/Untitled%201.png\" alt=\"Untitled\"></p>\n","feature":true,"text":"JS coreGC机制：Tracing Garbage Collection从GCRoot维护的一条引用链，会清除引用链无法触达的地方 JS Context熟悉js的人应该都知道，jsContext就是js执行的上下文环境，其中比较重要的一点就是全局的WIndow对象 JSVir...","link":"","photos":[],"count_time":{"symbolsCount":624,"symbolsTime":"1 mins."},"categories":[{"name":"JS原理","slug":"JS原理","count":1,"path":"api/categories/JS原理.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JS-core\"><span class=\"toc-text\">JS core</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GC%E6%9C%BA%E5%88%B6%EF%BC%9ATracing-Garbage-Collection\"><span class=\"toc-text\">GC机制：Tracing Garbage Collection</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS-Context\"><span class=\"toc-text\">JS Context</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JSVirtualMachine%EF%BC%88JSVM%EF%BC%89\"><span class=\"toc-text\">JSVirtualMachine（JSVM）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JSExport\"><span class=\"toc-text\">JSExport</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JSValue\"><span class=\"toc-text\">JSValue</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol>","author":{"name":"动物园园长","slug":"blog-author","avatar":"https://images.unsplash.com/photo-1616207787467-20787d4cbf8a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjEzfHxhbmltYWwlMjBsb3ZlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60","link":"https://github.com/SkylarShuang","description":"喜欢代码的动物园园长🐒","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Vue3异步组件的原理","uid":"83828ee736bf235d7180bde42e5f781a","slug":"Vue异步组件逻辑","date":"2022-04-01T12:15:39.521Z","updated":"2022-04-02T03:34:41.741Z","comments":true,"path":"api/articles/Vue异步组件逻辑.json","keywords":null,"cover":"https://images.unsplash.com/photo-1548802673-380ab8ebc7b7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mjd8fGFuaW1hbCUyMGxvdmV8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60","text":"首先请参考Vue异步组件的用法 1.用例分析此处写一个Vue异步组件的例子： Vue.component('async-example', function (resolve, reject) &#123; setTimeout(function () &#123; // 向 `...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"Vue","slug":"Vue","count":3,"path":"api/categories/Vue.json"}],"tags":[],"author":{"name":"动物园园长","slug":"blog-author","avatar":"https://images.unsplash.com/photo-1616207787467-20787d4cbf8a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjEzfHxhbmltYWwlMjBsb3ZlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60","link":"https://github.com/SkylarShuang","description":"喜欢代码的动物园园长🐒","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}